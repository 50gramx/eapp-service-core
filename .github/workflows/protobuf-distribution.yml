name: Protobuf Distribution

on:
  push:
    branches: [ master ]
    paths: [ 'src/main/proto/**' ]
  workflow_dispatch:

jobs:
  compile-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout System Contracts
        uses: actions/checkout@v4
        with:
          path: system-contracts

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install protobuf==4.25.1
          pip install grpcio-tools==1.60.0
          pip install grpcio==1.60.0
          pip install build

      - name: Compile Protobuf for Python
        run: |
          cd system-contracts
          mkdir -p ../python-packages/src/eapp_python_domain/ethos
          
          # Use the working approach with grpc_tools.protoc
          python -m grpc_tools.protoc \
            --python_out=../python-packages/src/eapp_python_domain/ethos \
            --grpc_python_out=../python-packages/src/eapp_python_domain/ethos \
            --pyi_out=../python-packages/src/eapp_python_domain/ethos \
            -I src/main/proto \
            $(find src/main/proto -name "*.proto")
          
          # Create __init__.py files
          find ../python-packages/src/eapp_python_domain/ethos -type d -exec touch {}/__init__.py \;
          
          # Create Python package structure
          cd ../python-packages
          echo 'from setuptools import setup, find_packages' > setup.py
          echo 'setup(' >> setup.py
          echo '    name="eapp-python-domain",' >> setup.py
          echo '    version="0.1.0",' >> setup.py
          echo '    description="Python protobuf client for EAPP system contracts",' >> setup.py
          echo '    packages=find_packages(where="src"),' >> setup.py
          echo '    package_dir={"": "src"},' >> setup.py
          echo '    python_requires=">=3.7",' >> setup.py
          echo '    install_requires=["protobuf>=3.21.0", "grpcio>=1.50.0"],' >> setup.py
          echo ')' >> setup.py
          
          mkdir -p src/eapp_python_domain
          echo '# Python protobuf client package' > src/eapp_python_domain/__init__.py

      - name: Build Python Package
        id: build
        run: |
          cd python-packages
          
          # Build package
          python -m build
          
          # Create unique version
          VERSION="0.1.0.$(date +%s)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Get file names
          TAR_FILE=$(ls dist/*.tar.gz | head -1)
          WHEEL_FILE=$(ls dist/*.whl | head -1)
          echo "tar-file=$(basename $TAR_FILE)" >> $GITHUB_OUTPUT
          echo "wheel-file=$(basename $WHEEL_FILE)" >> $GITHUB_OUTPUT

      - name: Publish Python Package
        env:
          GH_TOKEN: ${{ secrets.PROTOBUF_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          cd python-packages
          
          # Create release in python-domain repo
          gh release create v${{ steps.build.outputs.version }} \
            --repo ${{ github.repository_owner }}/eapp-python-domain \
            --title "Release v${{ steps.build.outputs.version }}" \
            --notes "Python protobuf client package" \
            --draft=false \
            --prerelease=false
          
          # Upload package files
          TAR_FILE=$(ls dist/*.tar.gz | head -1)
          WHEEL_FILE=$(ls dist/*.whl | head -1)
          gh release upload v${{ steps.build.outputs.version }} "$TAR_FILE" "$WHEEL_FILE" \
            --repo ${{ github.repository_owner }}/eapp-python-domain \
            --clobber
          
          # Create package index from template
          mkdir -p packages
          cp ../system-contracts/templates/python-package-index.html packages/index.html
          
          # Replace placeholders
          sed -i "s/{{VERSION}}/${{ steps.build.outputs.version }}/g" packages/index.html
          sed -i "s/{{TAR_FILE}}/${{ steps.build.outputs.tar-file }}/g" packages/index.html
          sed -i "s/{{WHEEL_FILE}}/${{ steps.build.outputs.wheel-file }}/g" packages/index.html
          sed -i "s/{{TIMESTAMP}}/$(date -u)/g" packages/index.html

      - name: Commit Python Package Index
        run: |
          cd python-packages
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add packages/
          git commit -m "Add package index for v${{ steps.build.outputs.version }}" || echo "No changes to commit"
          git push origin master

  create-central-index:
    needs: [compile-python]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout System Contracts
        uses: actions/checkout@v4

      - name: Create Central Package Index
        run: |
          # Create central package index from template
          mkdir -p packages
          cp templates/central-package-index.html packages/index.html
          
          # Replace timestamp placeholder
          sed -i "s/{{TIMESTAMP}}/$(date -u)/g" packages/index.html

      - name: Commit Central Index
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add packages/
          git commit -m "Update central package index" || echo "No changes to commit"
          git push origin master

      - name: Completion
        run: |
          echo "Protobuf distribution completed!"
          echo "Central Index: https://html-preview.github.io/?url=https://raw.githubusercontent.com/50gramx/eapp-system-contracts/master/packages/index.html"
          echo "Python: https://github.com/50gramx/eapp-python-domain/releases" 