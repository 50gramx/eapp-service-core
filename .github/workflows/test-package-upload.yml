name: Test Package Upload

on:
  workflow_dispatch:

jobs:
  test-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Python Domain
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/eapp-python-domain
          token: ${{ secrets.PROTOBUF_TOKEN || secrets.GITHUB_TOKEN }}
          path: eapp-python-domain

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install twine

      - name: Create package via GitHub API
        run: |
          echo "Creating package via GitHub API..."
          curl -X POST \
            -H "Authorization: token ${{ secrets.PROTOBUF_TOKEN || secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/eapp-python-domain/packages \
            -d '{
              "package_type": "pypi",
              "name": "eapp-python-domain"
            }' || echo "Package might already exist"

      - name: Test package upload with verbose output
        run: |
          cd eapp-python-domain
          
          echo "Testing package upload with GitHub Packages API..."
          
          # Create a .pypirc file with the correct format for GitHub Packages
          echo '[distutils]' > ~/.pypirc
          echo 'index-servers = github' >> ~/.pypirc
          echo '' >> ~/.pypirc
          echo '[github]' >> ~/.pypirc
          echo 'repository = https://github.com/${{ github.repository_owner }}/eapp-python-domain/packages/pypi' >> ~/.pypirc
          echo 'username = ${{ github.actor }}' >> ~/.pypirc
          echo 'password = ${{ secrets.PROTOBUF_TOKEN || secrets.GITHUB_TOKEN }}' >> ~/.pypirc
          
          # Test upload with the configured .pypirc
          python -m twine upload --verbose -r github dist/* 