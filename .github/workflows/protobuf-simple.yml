name: Protobuf Distribution (Simplified)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  setup-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Setup Version
        id: version
        run: |
          YEAR=$(date +%y)
          MONTH=$(date +%m)
          BUILD_NUMBER=${{ github.run_number }}
          echo "version=$YEAR.$MONTH.$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "Generated version: $YEAR.$MONTH.$BUILD_NUMBER"

  python-domain:
    runs-on: ubuntu-latest
    needs: setup-version
    steps:
      - name: Checkout system contracts
        uses: actions/checkout@v4
        with:
          path: eapp-system-contracts

      - name: Checkout Python Domain
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/eapp-python-domain
          token: ${{ secrets.GITHUB_TOKEN }}
          path: eapp-python-domain

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install protobuf==4.25.1
          pip install grpcio-tools==1.60.0
          pip install grpcio==1.60.0
          pip install twine

      - name: List proto files
        run: |
          echo "Available proto files:"
          find ${{ github.workspace }}/eapp-system-contracts/src/main/proto -name "*.proto" | head -20

      - name: Generate Python protobuf code
        run: |
          EAPP_PROTO_SRC_DIR="${{ github.workspace }}/eapp-system-contracts/src/main/proto"
          EAPP_PROTO_PYTHON_OUT_DIR="${{ github.workspace }}/eapp-python-domain/src/eapp_python_domain"
          
          echo "Source directory: $EAPP_PROTO_SRC_DIR"
          echo "Output directory: $EAPP_PROTO_PYTHON_OUT_DIR"
          
          # Create output directory if it doesn't exist
          mkdir -p "$EAPP_PROTO_PYTHON_OUT_DIR"
          
          # Generate protobuf code for a few key files first
          python -m grpc_tools.protoc \
            --python_out="$EAPP_PROTO_PYTHON_OUT_DIR" \
            --grpc_python_out="$EAPP_PROTO_PYTHON_OUT_DIR" \
            --pyi_out="$EAPP_PROTO_PYTHON_OUT_DIR" \
            -I "$EAPP_PROTO_SRC_DIR" \
            "$EAPP_PROTO_SRC_DIR/google/api/http.proto" \
            "$EAPP_PROTO_SRC_DIR/google/api/annotations.proto" \
            "$EAPP_PROTO_SRC_DIR/google/api/httpbody.proto"
          
          echo "Generated files:"
          find "$EAPP_PROTO_PYTHON_OUT_DIR" -name "*.py" | head -10

      - name: Create __init__.py files
        run: |
          EAPP_PROTO_PYTHON_OUT_DIR="${{ github.workspace }}/eapp-python-domain/src/eapp_python_domain"
          find "$EAPP_PROTO_PYTHON_OUT_DIR" -type d -exec touch {}/__init__.py \;

      - name: List generated files
        run: |
          EAPP_PROTO_PYTHON_OUT_DIR="${{ github.workspace }}/eapp-python-domain/src/eapp_python_domain"
          echo "Generated files:"
          find "$EAPP_PROTO_PYTHON_OUT_DIR" -type f | head -20

      - name: Commit and push Python changes
        run: |
          cd ${{ github.workspace }}/eapp-python-domain
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update protobuf generated code - version ${{ needs.setup-version.outputs.version }}" || echo "No changes to commit"
          git push || echo "No changes to push"

  dart-domain:
    runs-on: ubuntu-latest
    needs: setup-version
    steps:
      - name: Checkout system contracts
        uses: actions/checkout@v4
        with:
          path: eapp-system-contracts

      - name: Checkout Dart Domain
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/eapp-dart-domain
          token: ${{ secrets.GITHUB_TOKEN }}
          path: eapp-dart-domain

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1

      - name: Install Dart dependencies
        run: |
          dart pub global activate protoc_plugin
          export PATH="$PATH":"$HOME/.pub-cache/bin"

      - name: Install protobuf compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Generate Dart protobuf code
        run: |
          EAPP_PROTO_SRC_DIR="${{ github.workspace }}/eapp-system-contracts/src/main/proto"
          EAPP_PROTO_DART_OUT_DIR="${{ github.workspace }}/eapp-dart-domain/src/eapp_dart_domain"
          
          echo "Source directory: $EAPP_PROTO_SRC_DIR"
          echo "Output directory: $EAPP_PROTO_DART_OUT_DIR"
          
          # Create output directory if it doesn't exist
          mkdir -p "$EAPP_PROTO_DART_OUT_DIR/lib"
          
          # Generate protobuf code for a few key files first
          protoc \
            --dart_out=grpc:"$EAPP_PROTO_DART_OUT_DIR/lib" \
            -I "$EAPP_PROTO_SRC_DIR" \
            "$EAPP_PROTO_SRC_DIR/google/api/http.proto" \
            "$EAPP_PROTO_SRC_DIR/google/api/annotations.proto" \
            "$EAPP_PROTO_SRC_DIR/google/api/httpbody.proto"
          
          echo "Generated files:"
          find "$EAPP_PROTO_DART_OUT_DIR/lib" -name "*.dart" | head -10

      - name: Commit and push Dart changes
        run: |
          cd ${{ github.workspace }}/eapp-dart-domain
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update protobuf generated code - version ${{ needs.setup-version.outputs.version }}" || echo "No changes to commit"
          git push || echo "No changes to push"

  notify-completion:
    runs-on: ubuntu-latest
    needs: [python-domain, dart-domain]
    if: always()
    steps:
      - name: Notify completion
        run: |
          echo "Simplified protobuf distribution pipeline completed!"
          echo "Version: ${{ needs.setup-version.outputs.version }}"
          echo "Check the individual job logs for details." 