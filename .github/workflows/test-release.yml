name: Test Release System

on:
  workflow_dispatch:

jobs:
  test-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Python Domain
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/eapp-python-domain
          token: ${{ secrets.PROTOBUF_TOKEN || secrets.GITHUB_TOKEN }}
          path: eapp-python-domain

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install build setuptools wheel

      - name: Generate test package
        run: |
          cd eapp-python-domain
          
          # Create a test package
          echo 'from setuptools import setup, find_packages' > setup.py
          echo 'setup(' >> setup.py
          echo '    name="eapp-python-domain",' >> setup.py
          echo '    version="25.7.8",' >> setup.py
          echo '    description="Test package for GitHub releases",' >> setup.py
          echo '    packages=find_packages(where="src"),' >> setup.py
          echo '    package_dir={"": "src"},' >> setup.py
          echo '    python_requires=">=3.7",' >> setup.py
          echo ')' >> setup.py
          
          # Create source directory
          mkdir -p src/eapp_python_domain
          echo '# Test package' > src/eapp_python_domain/__init__.py
          
          # Build package
          python -m build
          
          # List what files were created
          echo "Files created in dist/:"
          ls -la dist/
          
          # Check if files were created successfully
          if [ ! -f "dist/eapp-python-domain-25.7.8.tar.gz" ]; then
            echo "ERROR: Source distribution not built."
            echo "Available files in dist/:"
            ls -la dist/ || echo "dist/ directory is empty or doesn't exist"
            exit 1
          fi
          
          if [ ! -f "dist/eapp_python_domain-25.7.8-py3-none-any.whl" ]; then
            echo "ERROR: Wheel distribution not built."
            echo "Available files in dist/:"
            ls -la dist/ || echo "dist/ directory is empty or doesn't exist"
            exit 1
          fi

      - name: Create packages directory
        run: |
          cd eapp-python-domain
          mkdir -p packages

      - name: Create package index
        run: |
          cd eapp-python-domain
          
          # Get the actual file names from dist/
          TAR_FILE=$(ls dist/*.tar.gz | head -1)
          WHEEL_FILE=$(ls dist/*.whl | head -1)
          
          echo "Using files: $TAR_FILE and $WHEEL_FILE"
          
          # Create a simple package index
          echo '<!DOCTYPE html>' > packages/index.html
          echo '<html>' >> packages/index.html
          echo '<head><title>Python Packages</title></head>' >> packages/index.html
          echo '<body>' >> packages/index.html
          echo '<h1>Python Packages</h1>' >> packages/index.html
          echo '<p>Available packages:</p>' >> packages/index.html
          echo '<ul>' >> packages/index.html
          echo "<li><a href=\"https://github.com/50gramx/eapp-python-domain/releases/download/v25.7.8/$(basename $TAR_FILE)\">$(basename $TAR_FILE)</a></li>" >> packages/index.html
          echo "<li><a href=\"https://github.com/50gramx/eapp-python-domain/releases/download/v25.7.8/$(basename $WHEEL_FILE)\">$(basename $WHEEL_FILE)</a></li>" >> packages/index.html
          echo '</ul>' >> packages/index.html
          echo '<p>Install with:</p>' >> packages/index.html
          echo '<pre>pip install --index-url https://raw.githubusercontent.com/50gramx/eapp-python-domain/main/packages/index.html eapp-python-domain</pre>' >> packages/index.html
          echo '</body></html>' >> packages/index.html

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PROTOBUF_TOKEN || secrets.GITHUB_TOKEN }}
        with:
          tag_name: v25.7.8
          release_name: Release v25.7.8
          body: Test release for package hosting system
          draft: false
          prerelease: false

      - name: Upload package files to release
        run: |
          cd eapp-python-domain
          
          # Get the actual file names
          TAR_FILE=$(ls dist/*.tar.gz | head -1)
          WHEEL_FILE=$(ls dist/*.whl | head -1)
          
          echo "Uploading $TAR_FILE and $WHEEL_FILE"
          
          # Upload tar.gz file
          curl -X POST \
            -H "Authorization: token ${{ secrets.PROTOBUF_TOKEN || secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/gzip" \
            --data-binary @"$TAR_FILE" \
            "${{ steps.create_release.outputs.upload_url }}?name=$(basename $TAR_FILE)"
          
          # Upload wheel file
          curl -X POST \
            -H "Authorization: token ${{ secrets.PROTOBUF_TOKEN || secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @"$WHEEL_FILE" \
            "${{ steps.create_release.outputs.upload_url }}?name=$(basename $WHEEL_FILE)"

      - name: Commit and push package index
        run: |
          cd eapp-python-domain
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add packages/
          git commit -m "Add package index for v25.7.8" || echo "No changes to commit"
          git push origin master

      - name: Test completion
        run: |
          echo "Test release system completed!"
          echo "Check: https://github.com/50gramx/eapp-python-domain/releases/tag/v25.7.8"
          echo "Index: https://raw.githubusercontent.com/50gramx/eapp-python-domain/main/packages/index.html" 