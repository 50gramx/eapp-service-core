syntax = "proto3";
package elint.services.product.identity.account;

import "ethos/elint/entities/account.proto";
import "ethos/elint/entities/generic.proto";
import "ethos/elint/services/product/identity/account/access_account.proto";

// Service Definitions
service ConnectAccountService {

    rpc GetAllConnectedAccountAssistants (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (ConnectedAccountAssistants) {
    }; // returns list of connected account assistants
    rpc GetAllConnectedAccounts (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (ConnectedAccounts) {
    }; // returns list of connected accounts

    rpc IsAccountAssistantConnected (IsAccountAssistantConnectedRequest) returns (elint.entity.ResponseMeta) {
    }; // Checks if the account assistant is connected or not
    rpc IsAccountConnected (IsAccountConnectedRequest) returns (elint.entity.ResponseMeta) {
    }; // Checks if the account is connected or not

    rpc ParseAccountMobiles (ParseAccountMobilesRequest) returns (ParseAccountMobilesResponse) {
    };

    rpc SyncAccountConnections (SyncAccountConnectionsRequest) returns (SyncAccountConnectionsResponse) {
    };
    rpc ConnectAccount (ConnectAccountRequest) returns (ConnectAccountResponse) {
    };
}

// Message Definitions
message ConnectedAccountAssistants {
    repeated elint.entity.AccountConnectedAccountAssistant connected_account_assistants = 1;
    elint.entity.ResponseMeta response_meta = 2;
}

message ConnectedAccounts {
    repeated elint.entity.AccountConnectedAccount connected_accounts = 1;
    elint.entity.ResponseMeta response_meta = 2;
}

message IsAccountAssistantConnectedRequest {
    string account_id = 1;
    elint.entity.AccountConnectedAccountAssistant connected_account_assistant = 2;
}

message IsAccountConnectedRequest {
    string account_id = 1;
    elint.entity.AccountConnectedAccount connected_account = 2;
}

message ParseAccountMobilesRequest {
    elint.services.product.identity.account.AccountServicesAccessAuthDetails access_auth_details = 1;
    repeated string connecting_account_mobile_numbers = 2;
}

message ParseAccountMobilesResponse {
    repeated elint.entity.AccountMobile account_mobiles = 1;
    elint.entity.ResponseMeta response_meta = 2;
}


message SyncAccountConnectionsRequest {
    elint.services.product.identity.account.AccountServicesAccessAuthDetails access_auth_details = 1;
    repeated elint.entity.AccountMobile connecting_account_mobiles = 2;
}

message SyncAccountConnectionsResponse {
    message ConnectedAccount {
        elint.entity.AccountConnectedAccount connected_account = 1;
        elint.entity.AccountMobile connected_account_mobile = 2;
    }
    repeated ConnectedAccount connected_accounts = 1;
    elint.entity.ResponseMeta response_meta = 2;
}

message ConnectAccountRequest {
    elint.services.product.identity.account.AccountServicesAccessAuthDetails access_auth_details = 1;
    string connecting_account_id = 2;
}

message ConnectAccountResponse {
    elint.entity.AccountConnectedAccount connected_account = 1;
    elint.entity.ResponseMeta response_meta = 2;
}