syntax = "proto3";

option java_multiple_files = true;
option java_package = "elint.services.product.identity.account";
option java_outer_classname = "DiscoverAccountProto";

package elint.services.product.identity.account;

import "ethos/elint/entities/account.proto";
import "ethos/elint/entities/account_assistant.proto";
import "ethos/elint/entities/generic.proto";
import "ethos/elint/services/product/identity/account/access_account.proto";

service DiscoverAccountService {
    rpc GetAccountById (GetAccountByIdRequest) returns (GetAccountByIdResponse) {
    };
    rpc GetAccountProfilePicture (GetAccountProfilePictureRequest) returns (stream GetAccountProfilePictureResponse) {
    }; // TODO: Complete this service https://ethos-alpha.atlassian.net/browse/NE-106
    rpc GetAccountAssistant (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (elint.entity.AccountAssistant) {
    }; // TODO: Complete this service
    rpc IsAccountExistsWithMobile (IsAccountExistsWithMobileRequest) returns (elint.entity.ResponseMeta) {
    };
    rpc AreAccountsExistingWithMobile (AreAccountsExistingWithMobileRequest) returns (stream AreAccountsExistingWithMobileResponse) {
    };

}

message GetAccountByIdRequest {
    string account_id = 1;
}

message GetAccountByIdResponse {
    elint.entity.Account account = 1;
    elint.entity.ResponseMeta response_meta = 2;
}

message GetAccountProfilePictureRequest {
    elint.services.product.identity.account.AccountServicesAccessAuthDetails access_auth_details = 1;
    elint.entity.PictureSize picture_size = 2;
    elint.entity.PictureScale picture_scale = 3;
}

message GetAccountProfilePictureResponse {
    bytes image_data = 1;
    elint.entity.ResponseMeta response_meta = 3;
}

message IsAccountExistsWithMobileRequest {
    elint.services.product.identity.account.AccountServicesAccessAuthDetails access_auth_details = 1;
    string account_country_code = 2;
    string account_mobile_number = 3;
}

message AreAccountsExistingWithMobileRequest {
    elint.services.product.identity.account.AccountServicesAccessAuthDetails access_auth_details = 1;
    repeated elint.entity.AccountMobile account_mobiles = 2;
}

message AreAccountsExistingWithMobileResponse {
    message AccountMobileExists {
        string account_country_code = 1;
        string account_mobile_number = 2;
        bool account_exists = 3;
    }
    AccountMobileExists account_mobiles_exists = 1;
    elint.entity.ResponseMeta response_meta = 2;
}