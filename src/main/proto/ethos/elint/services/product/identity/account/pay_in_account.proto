/*************************************************************************
*
* AMIT KUMAR KHETAN CONFIDENTIAL
* __________________
*
*  [2017] - [2021] Amit Kumar Khetan
*  All Rights Reserved.
*
* NOTICE:  All information contained herein is, and remains
* the property of Amit Kumar Khetan and its suppliers,
* if any.  The intellectual and technical concepts contained
* herein are proprietary to Amit Kumar Khetan
* and its suppliers and may be covered by U.S. and Foreign Patents,
* patents in process, and are protected by trade secret or copyright law.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Amit Kumar Khetan.
*/

syntax = "proto3";
package elint.services.product.identity.account;

import "ethos/elint/entities/account.proto";
import "ethos/elint/entities/generic.proto";
import "ethos/elint/services/product/identity/account/access_account.proto";

service PayInAccountService {
  rpc GetAccountPayInPublishableKey (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (AccountPayInPublishableKey) {};
  rpc CreateAccountPayIn (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (elint.entity.ResponseMeta) {};
  rpc GetAccountPayInAccessKey (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (AccountPayInAccessKey) {};
  rpc GetAccountPayInSecretKey (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (AccountPayInSecretKey) {};
  rpc GetAccountPayInIntent (GetAccountPayInIntentRequest) returns (GetAccountPayInIntentResponse) {};

  // Payment Method: Card
  rpc ListAllCards (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (ListAllCardsResponse) {};
  rpc SaveCard (elint.services.product.identity.account.AccountServicesAccessAuthDetails) returns (SaveCardResponse) {};
}

message AccountPayInPublishableKey {
  string key = 1;
  elint.entity.ResponseMeta response_meta = 2;
}

message AccountPayInAccessKey {
  string json_key = 1;
  elint.entity.ResponseMeta response_meta = 2;
}

message AccountPayInSecretKey {
  string key = 1;
}

message GetAccountPayInIntentRequest {
  elint.services.product.identity.account.AccountServicesAccessAuthDetails access_auth_details = 1;
  bool prefer_billing_annually = 2;
}

message GetAccountPayInIntentResponse {
  elint.entity.ResponseMeta response_meta = 2;
}

message ListAllCardsResponse {
  repeated elint.entity.AccountPayInCardDetails account_pay_in_cards = 1;
  elint.entity.ResponseMeta response_meta = 2;
}

message SaveCardResponse {
  string save_card_secret = 1;
  elint.entity.ResponseMeta response_meta = 2;
}